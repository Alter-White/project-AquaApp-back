{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaApp",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of AquaApp"
  },
  "servers": [
    {
      "url": "https://project-aquaapp-back.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations about users."
    },
    {
      "name": "Water",
      "description": "Operations related to water consumption."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User register",
        "operationId": "registerUser",
        "description": "Registeration a new user for Aquatrack",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "user's email",
                    "type": "string",
                    "format": "email",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "description": "user's password",
                    "type": "string",
                    "format": "password",
                    "example": "agdgdjhagsdjag"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registeration a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "Authorization a user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "user's email",
                    "type": "string",
                    "example": "example@gmail.com",
                    "format": "email"
                  },
                  "password": {
                    "description": "user's password",
                    "type": "string",
                    "example": "agdgdjhagsdjag",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authorization a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/login"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "operationId": "logoutUser",
        "description": "User logout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "_id"
                ],
                "properties": {
                  "_id": {
                    "description": "Session's id from cookies",
                    "type": "string",
                    "example": "65ca67e7ae7f10c88b598384",
                    "format": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Delete user session"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Token refresh",
        "operationId": "refreshUsersSession",
        "description": "Token refresh ",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "_id",
                  "refreshToken"
                ],
                "properties": {
                  "_id": {
                    "description": "Session's id from cookies",
                    "type": "string",
                    "example": "65ca67e7ae7f10c88b598384",
                    "format": "string"
                  },
                  "refreshToken": {
                    "description": "Session's refresh token from cookies",
                    "type": "string",
                    "example": "rNuCDC5kOZxe2UPq3mZIxFP8bXWKLYlWSEpsuAWB",
                    "format": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!",
                      "format": "message"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/login"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset user password",
        "operationId": "ResetPassword",
        "description": "Reset user password",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "description": "access token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NmE5MzliMWE3MTU0OGE5M2I1ZDhkZGUiLCJlbWFpbCI6Im4ua3NlbmVjaGthLnZAZ21haWwuY29tIiwiaWF0IjoxNzIyNTE5NzM2LCJleHAiOjE3MjI1MjAwMzZ9.jVR8UZtE6JczH87N8MUOVWIjpB-IarihUA8Ca9NyRyU",
                    "format": "token"
                  },
                  "password": {
                    "description": "user's password",
                    "type": "string",
                    "example": "agdgdjhagsdjag",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset user password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset.."
                    },
                    "data": {
                      "type": "object",
                      "example": {},
                      "$ref": "#/components/schemas/login"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get list of users",
        "operationId": "getUsers",
        "description": "Get list of users with this endpoint",
        "security": [],
        "responses": {
          "200": {
            "description": "Get count of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved user count"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalUsersCount": {
                          "type": "integer",
                          "description": "Number of all users",
                          "example": 32
                        },
                        "randomAvatars": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "https://i.pinimg.com/736x/7b/8c/d8/7b8cd8b068e4b9f80b4bcf0928d7d499.jpg",
                            "description": "path to user photo"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/account": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user information",
        "operationId": "patchUser",
        "description": "Update user information with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "format": "password"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "man",
                      "woman",
                      "other"
                    ]
                  },
                  "weight": {
                    "type": "number",
                    "description": "User's weight"
                  },
                  "sportTime": {
                    "type": "number",
                    "description": "Time user spends on sports activities"
                  },
                  "dailyRateWater": {
                    "type": "number",
                    "description": "User's daily water intake rate"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "User's avatar file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "password": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string",
                          "enum": [
                            "man",
                            "woman",
                            "other"
                          ],
                          "example": "man"
                        },
                        "weight": {
                          "type": "number",
                          "example": 70.5
                        },
                        "sportTime": {
                          "type": "number",
                          "example": 1.5
                        },
                        "dailyRateWater": {
                          "type": "number",
                          "example": 2
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://static.vecteezy.com/system/resources/previews/019/879/186/non_2x/user-icon-on-transparent-background-free-png.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user",
        "operationId": "getCurrentUser",
        "description": "Get the current user based on the session information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string",
              "example": "example_refresh_token"
            },
            "description": "Refresh token for session validation"
          },
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "example_session_id"
            },
            "description": "Session ID for session validation"
          }
        ],
        "responses": {
          "200": {
            "description": "Get current user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "$ref": "#/components/schemas/users"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create an entry of Water",
        "operationId": "createwaterInfo",
        "description": "Create an entry of Water with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "volume"
                ],
                "properties": {
                  "date": {
                    "description": "Date of entry",
                    "type": "string",
                    "example": "2024-07-24T10:12:22Z"
                  },
                  "volume": {
                    "description": "The volume of water used",
                    "type": "integer",
                    "example": 50,
                    "minimum": 25,
                    "maximum": 3000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created an entry of Water!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created an entry of Water!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{waterId}": {
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete an entry of Water",
        "operationId": "deleteWaterInfo",
        "description": "Delete an entry of Water with the provided ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "waterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65e4decdd286b30065d54af9"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted an entry of Water!",
            "content": {}
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update an entry of Water",
        "operationId": "updateWaterInfo",
        "description": "Update an entry of Water with the provided ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "waterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65e4decdd286b30065d54af9"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "description": "Date of entry",
                    "type": "string",
                    "example": "2024-07-24T10:12:22Z"
                  },
                  "volume": {
                    "description": "The volume of water used",
                    "type": "number",
                    "example": 50,
                    "minimum": 10,
                    "maximum": 3000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated an entry of Water!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/day": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water entries by day",
        "operationId": "getWaterByDay",
        "description": "Get water entries for a specific day with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "example": "2024-08-03"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved water entries for the day!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Total volume per day is 500ml or 28%"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "totalPerDay",
                        "percentPerDay",
                        "dayItems"
                      ],
                      "properties": {
                        "totalPerDay": {
                          "type": "number",
                          "example": 500
                        },
                        "percentPerDay": {
                          "type": "number",
                          "example": 28
                        },
                        "dayItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "_id",
                              "date",
                              "volume",
                              "userId",
                              "createdAt",
                              "updatedAt"
                            ],
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "66bbabaa7cb6b50eb852650a"
                              },
                              "date": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-08-04T19:10:10"
                              },
                              "volume": {
                                "type": "number",
                                "example": 500
                              },
                              "userId": {
                                "type": "string",
                                "example": "66b7cf8b7fa2ea0d9c9610d0"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-08-13T18:53:30.576Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-08-13T18:53:30.576Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water entries by month",
        "operationId": "getWaterByMonth",
        "description": "Get water entries for a specific month with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "example": "2024-08"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved water entries for the month!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get water list for 2024-08"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "result"
                      ],
                      "properties": {
                        "result": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "date",
                              "percentage"
                            ],
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date",
                                "example": "2024-08-01"
                              },
                              "percentage": {
                                "type": "number",
                                "example": 28
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "users": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "format": "password"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "man",
              "woman",
              "other"
            ],
            "default": "man"
          },
          "weight": {
            "description": "User's weight",
            "type": "number",
            "default": 0,
            "example": 70.5
          },
          "sportTime": {
            "description": "Time user spends on sports activities",
            "type": "number",
            "default": 0,
            "example": 1.5
          },
          "dailyRateWater": {
            "description": "User's daily water intake rate",
            "type": "number",
            "default": 0,
            "example": 2
          },
          "avatar": {
            "description": "User's avatar URL",
            "type": "string",
            "format": "uri",
            "example": "https://static.vecteezy.com/system/resources/previews/019/879/186/non_2x/user-icon-on-transparent-background-free-png.png"
          }
        }
      },
      "login": {
        "type": "object",
        "required": [
          "accessToken"
        ],
        "properties": {
          "accessToken": {
            "description": "access token",
            "type": "string",
            "example": "J/rbRcndttkAH/i8FwzkgbhaL2hywdsU4rRTLshX"
          }
        }
      },
      "water": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}$",
            "description": "Date in the format YYYY-MM-DDTHH:MM:SS. Correct example: 2024-08-03T14:38:24\n",
            "example": "2024-08-03T14:38:24"
          },
          "volume": {
            "type": "number",
            "description": "The volume of water.\n",
            "example": 500
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user.\n",
            "example": "60c72b2f5f1b2c001f8e4b9d"
          }
        },
        "required": [
          "date",
          "volume",
          "userId"
        ],
        "additionalProperties": false
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}