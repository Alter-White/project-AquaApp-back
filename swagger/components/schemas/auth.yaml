  title: User Authentication API
  version: 1.0.0
paths:
  /auth/register:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '../schemas/users.yaml'
        '400':
          description: Invalid input
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        '401':
          description: Invalid credentials
  /auth/refresh:
    post:
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: New access token issued
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
        '401':
          description: Invalid refresh token
  /auth/logout:
    post:
      summary: User logout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '204':
          description: Successfully logged out
        '401':
          description: Invalid refresh token
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterUser:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          example: 'John Doe'
        email:
          type: string
          format: email
          example: 'john.doe@example.com'
        password:
          type: string
    LoginUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: 'john.doe@example.com'
        password:
          type: string
    User:
      type: object
      required:
        - name
        - email
        - password
      properties:
        _id:
          description: "User's id"
          type: string
          example: 65e4decdd286b30065d54af9
        name:
          description: "User's name"
          type: string
          example: 'John Doe'
        email:
          description: "User's email"
          type: string
          format: email
          example: 'john.doe@example.com'
        password:
          description: "User's password"
          type: string
          format: password
        gender:
          description: "User's gender"
          type: string
          enum: ['man', 'woman', 'other']
          default: 'man'
        weight:
          description: "User's weight"
          type: number
          default: 0
          example: 70.5
        sportTime:
          description: 'Time user spends on sports activities'
          type: number
          default: 0
          example: 1.5
        dailyRateWater:
          description: "User's daily water intake rate"
          type: number
          default: 0
          example: 2.0
        avatar:
          description: "User's avatar URL"
          type: string
          example: 'https://static.vecteezy.com/system/resources/previews/019/879/186/non_2x/user-icon-on-transparent-background-free-png.png'
security:
  - bearerAuth: []
